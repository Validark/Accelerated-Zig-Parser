const std = @import("std");
const builtin = @import("builtin");
const math = std.math;

pub fn main() void {
    const ops = [_][]const u8{ ".**", "!", "|", "||", "|=", "=", "==", "=>", "!=", "%", "%=", ".", ".*", "..", "...", "^", "^=", "+", "++", "+=", "+%", "+%=", "+|", "+|=", "-", "-=", "-%", "-%=", "-|", "-|=", "*", "*=", "**", "*%", "*%=", "*|", "*|=", "->", "/", "/=", "&", "&=", "<", "<=", "<<", "<<=", "<<|", "<<|=", ">", ">=", ">>", ">>=", "~", "//", "///", "//!", "\\\\", "+!", "-!", "*!", ".^", ".$", ".#", ":", ";", "[", "]", "?", "(", ")", "{", "}", ",", "*^" };

    comptime var keywords: [ops.len][4]u8 = undefined;

    inline for (ops, 0..) |op, i| {
        keywords[i] = (op ++ ("\x00" ** (4 - op.len))).*;
    }

    // for (keywords) |keyword| std.debug.print("{}: \"{s}\"\n", .{ std.mem.readIntLittle(u32, keyword[0..4]), keyword });

    // {
    //     var taken: u64 = 0;
    //     for (keywords) |keyword| {
    //         const len: u16 = @truncate(keyword.len);
    //         const a = std.mem.readIntLittle(u16, keyword[0..2]);
    //         const b = std.mem.readIntLittle(u16, keyword[len - 2 ..][0..2]);

    //         var c: u6 = @truncate(((@as(u32, a ^ (len >> 1)) *% 316177) *% (b >> 1)) >> 23);
    //         if (c == 15 or c == 35) c ^= @truncate(len & 6);

    //         const slot = @as(@TypeOf(taken), 1) << c;
    //         std.debug.print("{s}: {}\n", .{ keyword, c });
    //         if ((taken & slot) != 0) std.debug.print("\tCollision!\n", .{});
    //         taken |= slot;
    //     }
    // }

    // if (1 == 1) return;

    // const tokens = [_]u8{ '!', '|', '=', '(', ')', ';', '%', '{', '}', '[', ']', '.', '^', '+', '-', '*', ':', '/', ',', '&', '?', '<', '>', '~' };
    // _ = tokens;
    // // for (tokens) |token| std.debug.print("{}\n", .{token});
    // var taken_global: u128 = 0;
    // // comptime for (tokens) |token| {
    // //     taken_global |= @as(u256, 1) << token;
    // // };

    // // ((a >> 1) *% (b >> 1)) >> 6)

    // var num_set: std.AutoHashMapUnmanaged(u64, void) = .{};

    const xes = [_]u32{ 21838721, 43677442, 58758119, 75459609, 87354884, 112379007, 117516238, 150919218, 156056449, 174709767, 174709768, 192975847, 209677337, 224758014, 235032476, 246596735, 290274177, 301838436, 312112898, 327193575, 343895065, 349419534, 349419535, 349419536, 380814463, 385951694, 419354674, 424491905, 449516028, 461411303, 470064952, 478112793, 493193470, 515032191, 558709633, 580548354, 595629031, 603676872, 612330521, 624225796, 649249919, 654387150, 687790130, 692927361, 698839068, 698839070, 698839071, 698839072, 729846759, 746548249, 761628926, 771903388, 783467647, 827145089, 838709348, 848983810, 864064487, 880765977, 899032056, 899032057, 917685375, 922822606, 940129904, 940129905, 956225586, 961362817, 986386940, 998282215, 1014983705, 1030064382, 1051903103, 1095580545, 1117419266, 1132499943, 1149201433, 1161096708, 1186120831, 1191258062, 1207353743, 1207353744, 1224661042, 1229798273, 1248451591, 1248451592, 1266717671, 1283419161, 1298499838, 1308774300, 1320338559, 1364016001, 1385854722, 1454556287, 1498233729, 1523257852, 1566935294, 1588774015, 1632451457, 1654290178, 1697967620, 1722991743, 1766669185, 1798064112, 1798064113, 1798064114, 1835370750, 1857209471, 1900886913, 1922725634, 1972773880, 1972773881, 1991427199, 2029967410, 2035104641, 2060128764, 2072024039, 2088725529, 2103806206, 2125644927, 2169322369, 2191161090, 2206241767, 2222943257, 2234838532, 2259862655, 2264999886, 2298402866, 2303540097, 2322193415, 2322193416, 2340459495, 2357160985, 2372241662, 2382516124, 2394080383, 2414707486, 2414707488, 2437757825, 2449322084, 2459596546, 2474677223, 2491378713, 2496903182, 2496903183, 2496903184, 2528298111, 2533435342, 2566838322, 2571975553, 2596999676, 2608894951, 2617548600, 2625596441, 2640677118, 2662515839, 2706193281, 2728032002, 2743112679, 2751160520, 2759814169, 2771709444, 2796733567, 2801870798, 2835273778, 2840411009, 2877330407, 2894031897, 2909112574, 2919387036, 2930951295, 2974628737, 2986192996, 2996467458, 3011548135, 3028249625, 3046515704, 3046515705, 3065169023, 3070306254, 3087613552, 3087613553, 3103709234, 3108846465, 3133870588, 3145765863, 3162467353, 3177548030, 3199386751, 3243064193, 3264902914, 3279983591, 3296685081, 3308580356, 3333604479, 3338741710, 3354837391, 3354837392, 3372144690, 3377281921, 3395935239, 3395935240, 3414201319, 3430902809, 3445983486, 3456257948, 3467822207, 3511499649, 3523063908, 3533338370, 3548419047, 3565120537, 3596128224, 3596128225, 3596128226, 3596128228, 3602039935, 3607177166, 3640580146, 3645717377, 3670741500, 3682636775, 3691290424, 3699338265, 3714418942, 3736257663, 3779935105, 3801773826, 3816854503, 3824902344, 3833555993, 3845451268, 3870475391, 3875612622, 3909015602, 3914152833, 3945547760, 3945547761, 3945547762, 3951072231, 3967773721, 3982854398, 3993128860, 4004693119, 4048370561, 4059934820, 4070209282, 4085289959, 4101991449, 4120257528, 4120257529, 4138910847, 4144048078, 4177451058, 4182588289, 4207612412, 4219507687, 4236209177, 4251289854, 4273128575 };

    const l_s = [_]u5{ 16, 17, 16, 16, 18, 16, 17, 17, 16, 19, 19, 16, 16, 17, 18, 16, 16, 18, 17, 16, 16, 20, 20, 20, 16, 17, 17, 6, 18, 16, 19, 16, 17, 16, 16, 17, 16, 19, 16, 18, 16, 17, 17, 16, 21, 21, 21, 21, 16, 16, 17, 18, 16, 16, 18, 7, 16, 16, 19, 19, 16, 17, 20, 20, 17, 16, 18, 16, 16, 17, 16, 16, 17, 16, 16, 18, 16, 17, 20, 20, 17, 16, 19, 9, 16, 16, 17, 18, 16, 16, 17, 16, 16, 18, 17, 16, 16, 17, 18, 16, 16, 20, 20, 20, 17, 16, 16, 17, 19, 19, 16, 7, 16, 18, 16, 16, 17, 16, 16, 17, 16, 16, 18, 16, 17, 17, 16, 19, 19, 16, 16, 17, 18, 16, 21, 21, 16, 18, 17, 6, 16, 20, 20, 20, 16, 17, 17, 16, 18, 16, 19, 16, 17, 16, 16, 17, 16, 19, 16, 18, 16, 17, 17, 16, 16, 16, 17, 8, 16, 16, 18, 17, 16, 16, 19, 19, 16, 17, 20, 20, 17, 16, 18, 16, 16, 17, 16, 16, 17, 16, 16, 18, 16, 17, 20, 0, 17, 16, 19, 19, 16, 16, 17, 18, 16, 16, 18, 17, 16, 16, 21, 21, 21, 21, 16, 17, 17, 16, 18, 16, 19, 16, 17, 6, 16, 17, 16, 19, 16, 18, 16, 17, 17, 16, 20, 20, 20, 16, 16, 17, 18, 16, 16, 18, 17, 16, 16, 19, 19, 16, 17, 7, 16, 18, 16, 16, 17, 16 };

    for (xes, l_s) |x, l| {
        _ = l;
        _ = x;
    }

    // var x: u32 = 1320338559;
    var ii: u7 = 0;
    _ = ii;
    var n: u32 = 0;
    for (xes) |x| {
        // ii +%= 1;
        // if (ii == 0) break;
        // x +%= 1;
        // if (x == 0) break;
        var i: i6 = 0;
        while (true) {
            // var j: i4 = -7;
            // while (true) {
            var k: i2 = 0;
            while (true) {
                const uint = std.meta.Int(.unsigned, 128);
                var takens = std.mem.zeroes([26]uint);
                for (keywords) |keyword| {
                    // const val = switch (keyword[0]) {
                    //     ':', ';', '[', ']', '?', '(', ')', '{', '}', ',', '@' => |c| c + ii,
                    //     else => blk: {
                    const a: u32 = std.mem.readIntLittle(u32, keyword[0..4]);
                    // const b: u8 = std.mem.readIntLittle(u8, keyword[keyword.len - 1 ..][0..1]);
                    const c: u3 = @truncate(keyword.len);

                    const a_i = if (i == -15) 1 else std.math.shl(u32, a, i);
                    // const b_j = if (j == -7) 1 else std.math.shl(u32, b, j);
                    const c_k = std.math.shl(u32, c, k);
                    const val = (a_i *% x) >> @truncate(c_k);
                    // break :blk val;
                    //     },
                    // };

                    // (a_i *% x) ^ (b_j *% c_k);
                    // (a_i *% x) *% (b_j *% c_k);
                    // (a_i ^ x) ^ (b_j ^ c_k);
                    // ((a_i ^ b_j) ^ c_k) *% x;
                    // ((a_i *% b_j) ^ c_k) *% x;
                    // ((a_i *% b_j) *% x) >> @truncate(c_k)
                    // ((a_i ^ b_j) *% x) >> @truncate(c_k);
                    // ((a_i ^ b_j) *% x) ^ c_k;
                    // ((a_i ^ b_j) >> @truncate(c_k)) *% x;
                    // ((a_i *% b_j) >> @truncate(c_k)) *% x;
                    // ((a_i ^ b_j) *% c_k) *% x;

                    // 53	59	61
                    // std.debug.print("{} {}\n", .{ a_i, c_k });

                    for (&takens, 0..) |*taken, l| {
                        if (val >> @intCast(l) < 128) {
                            const slot = @as(uint, 1) << @truncate(val >> @intCast(l));
                            taken.* |= slot;
                        }
                    }
                }

                for (&takens, 0..) |taken, l| {
                    // std.debug.print("{}\n", .{@popCount(taken)});
                    if (@popCount(taken) == keywords.len) {
                        n += 1;
                        const str =
                            \\export fn f{}(a: u8, b: u8, len: u4) u7 {{
                            \\    const a_i = a {s} {};
                            // \\    const b_j = b {s} {};
                            \\    const c_k = len {s} {};
                            \\    const x = {};
                            \\    const val = (a_i *% x) >> @truncate(c_k);
                            \\    return @truncate(val >> {});
                            \\}}
                            \\
                        ;
                        // std.debug.print("Close call:\n", .{});
                        std.debug.print(str, .{
                            n,
                            if (i > 0) "<<" else ">>",
                            std.math.absCast(i),
                            // if (j > 0) "<<" else ">>",
                            // std.math.absCast(j),
                            if (k > 0) "<<" else ">>",
                            std.math.absCast(k),
                            x,
                            l,
                        });
                    }
                }
                break;
                // k = std.math.add(i2, k, 1) catch break;
            }
            // j = std.math.add(i4, j, 1) catch break;
            // }
            // i += 1;
            // if (i == 16) break;
            break;
        }
    }
}

// 162

// [5,13,17,30,31,33,38,43,48,49,57,59,75,76,82,84,85,86,89,91,93,95,101,103,107,109,111,113,114,117,121,128,134,139,141,142,153,155,156,158,161,162,164,177,180,190,195,213,217]
// ['!', '|', '=', '(', ')', ';', '%', '{', '}', '[', ']', '.', '^', '+', '-', '*', ':', '/', ',', '&', '?', '<', '>', '~']
